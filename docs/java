document.addEventListener("DOMContentLoaded", () => {
    // Initialize the map
    const map = L.map('map-container').setView([51.505, -0.09], 5);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors'
    }).addTo(map);

    // Store waypoints
    let waypoints = [];

    // Function to add a waypoint
    function addWaypoint(latlng, name = `WP ${waypoints.length + 1}`) {
        const marker = L.marker(latlng, { draggable: true }).addTo(map)
            .bindPopup(generatePopupContent(name, marker));
        waypoints.push({ name, marker });
    }

    // Function to create popup content
    function generatePopupContent(name, marker) {
        return `
            <div class="waypoint-popup">
                <strong>${name}</strong><br>
                <button class="rename-btn">Rename</button>
                <button class="delete-btn">Delete</button>
            </div>
        `;
    }

    // Add waypoint on map click
    map.on('click', (e) => {
        addWaypoint(e.latlng);
    });

    // Handle popup actions
    map.on('popupopen', (e) => {
        const marker = e.popup._source;
        const popupContent = e.popup.getElement();

        // Handle renaming
        popupContent.querySelector('.rename-btn').addEventListener('click', () => {
            const newName = prompt("Enter new waypoint name:", marker.getPopup().getContent());
            if (newName) {
                const updatedPopup = generatePopupContent(newName, marker);
                marker.setPopupContent(updatedPopup).openPopup();
                updateWaypointName(marker, newName);
            }
        });

        // Handle deletion
        popupContent.querySelector('.delete-btn').addEventListener('click', () => {
            map.removeLayer(marker);
            removeWaypoint(marker);
        });
    });

    // Update waypoint name in the list
    function updateWaypointName(marker, newName) {
        waypoints = waypoints.map(wp => 
            wp.marker === marker ? { ...wp, name: newName } : wp
        );
    }

    // Remove waypoint from list
    function removeWaypoint(marker) {
        waypoints = waypoints.filter(wp => wp.marker !== marker);
    }
});

